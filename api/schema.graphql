scalar GraphQLDate

type Candidate {
    _id: ID!
    name: String!
    surname: String!
}

type Participant {
    _id: ID!    
    email: String!
}

input CandidateInputs {
    name: String!
    surname: String!
}

input CandidateUpdateInputs {
    name: String
    surname: String
}

input ParticipantInputs {
    email: String!
}

input ParticipantUpdateInputs {
    email: String!
}

type Query {
    candidateList: [Candidate!]!
    participantList: [Participant!]!
    electionTitle: String!
    sendRegisterPublicKeysMail(to: [String!]!): Boolean!
}

type Mutation {
    addCandiate(candidate: CandidateInputs!) : Candidate!
    updateCandidate(_id : ID!, changes: CandidateUpdateInputs!) : Candidate!
    removeCandidate(_id : ID!) : Boolean!
    addParticipant(participant : ParticipantInputs!) : Participant!
    removeParticipant(_id : ID!) : Boolean!
    updateParticipant(_id : ID!, changes: ParticipantUpdateInputs!) : Participant!
    updateElectionTitle(title: String!) : String!
}
